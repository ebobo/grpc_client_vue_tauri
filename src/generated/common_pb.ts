//
// Copyright (C) 2023 Autronica Fire and Security. All rights reserved.

// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file common.proto (package common, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message common.Meta
 */
export class Meta extends Message<Meta> {
  /**
   * @generated from field: int64 create_revision = 1;
   */
  createRevision = protoInt64.zero;

  /**
   * @generated from field: int64 mod_revision = 2;
   */
  modRevision = protoInt64.zero;

  /**
   * @generated from field: int64 version = 3;
   */
  version = protoInt64.zero;

  constructor(data?: PartialMessage<Meta>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "common.Meta";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "create_revision", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "mod_revision", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "version", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Meta {
    return new Meta().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Meta {
    return new Meta().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Meta {
    return new Meta().fromJsonString(jsonString, options);
  }

  static equals(a: Meta | PlainMessage<Meta> | undefined, b: Meta | PlainMessage<Meta> | undefined): boolean {
    return proto3.util.equals(Meta, a, b);
  }
}

